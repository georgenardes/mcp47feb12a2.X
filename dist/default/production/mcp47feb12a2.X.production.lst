

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat May 16 11:47:20 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18  0000                     
    19                           ; Version 2.10
    20                           ; Generated 31/07/2019 GMT
    21                           ; 
    22                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4520 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     
    54                           	psect	smallconst
    55  000600                     __psmallconst:
    56                           	opt callstack 0
    57  000600  00                 	db	0
    58  000601  62                 	db	98
    59  000602                     __end_of_DAC_SLAVE_ADDRESS:
    60                           	opt callstack 0
    61  0000                     _SSPBUF	set	4041
    62  0000                     _SSPSTATbits	set	4039
    63  0000                     _SSPCON2bits	set	4037
    64  0000                     _SSPADD	set	4040
    65  0000                     _SSPCON2	set	4037
    66  0000                     _SSPCON1	set	4038
    67  0000                     _SSPSTAT	set	4039
    68  0000                     _ADCON1	set	4033
    69  0000                     _TRISC5	set	31909
    70  0000                     _ACKEN	set	32300
    71  0000                     _ACKDT	set	32301
    72  0000                     _RCEN	set	32299
    73  0000                     _PEN	set	32298
    74  0000                     _ACKSTAT	set	32302
    75  0000                     _SSPIF	set	31987
    76  0000                     _SSPIE	set	31979
    77  0000                     _TRISC4	set	31908
    78  0000                     _TRISC3	set	31907
    79                           
    80                           ; #config settings
    81  000602  00                 	db	0	; dummy byte at the end
    82  0000                     
    83                           	psect	cinit
    84  000708                     __pcinit:
    85                           	opt callstack 0
    86  000708                     start_initialization:
    87                           	opt callstack 0
    88  000708                     __initialization:
    89                           	opt callstack 0
    90  000708                     end_of_initialization:
    91                           	opt callstack 0
    92  000708                     __end_of__initialization:
    93                           	opt callstack 0
    94  000708  0E00               	movlw	low (__Lsmallconst shr (0+16))
    95  00070A  6EF8               	movwf	tblptru,c
    96  00070C  0E06               	movlw	high __Lsmallconst
    97  00070E  6EF7               	movwf	tblptrh,c
    98  000710  0100               	movlb	0
    99  000712  EF02  F003         	goto	_main	;jump to C main() function
   100                           
   101                           	psect	cstackCOMRAM
   102  000001                     __pcstackCOMRAM:
   103                           	opt callstack 0
   104  000001                     I2C_Write@data:
   105                           	opt callstack 0
   106                           
   107                           ; 1 bytes @ 0x0
   108  000001                     	ds	1
   109  000002                     I2C_Start@slave_write_address:
   110                           	opt callstack 0
   111  000002                     DAC_Write@data:
   112                           	opt callstack 0
   113                           
   114                           ; 2 bytes @ 0x1
   115  000002                     	ds	1
   116  000003                     
   117                           ; 1 bytes @ 0x2
   118  000003                     	ds	1
   119  000004                     DAC_Write@result:
   120                           	opt callstack 0
   121                           
   122                           ; 1 bytes @ 0x3
   123  000004                     	ds	1
   124  000005                     ??_main:
   125                           
   126                           ; 1 bytes @ 0x4
   127  000005                     	ds	1
   128  000006                     main@j:
   129                           	opt callstack 0
   130                           
   131                           ; 1 bytes @ 0x5
   132  000006                     	ds	1
   133  000007                     main@i:
   134                           	opt callstack 0
   135                           
   136                           ; 2 bytes @ 0x6
   137  000007                     	ds	2
   138                           
   139 ;;
   140 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   141 ;;
   142 ;; *************** function _main *****************
   143 ;; Defined at:
   144 ;;		line 14 in file "main.c"
   145 ;; Parameters:    Size  Location     Type
   146 ;;		None
   147 ;; Auto vars:     Size  Location     Type
   148 ;;  i               2    6[COMRAM] unsigned short 
   149 ;;  j               1    5[COMRAM] char 
   150 ;; Return value:  Size  Location     Type
   151 ;;                  1    wreg      void 
   152 ;; Registers used:
   153 ;;		wreg, status,2, status,0, cstack
   154 ;; Tracked objects:
   155 ;;		On entry : 0/0
   156 ;;		On exit  : 0/0
   157 ;;		Unchanged: 0/0
   158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   159 ;;      Params:         0       0       0       0       0       0       0
   160 ;;      Locals:         3       0       0       0       0       0       0
   161 ;;      Temps:          1       0       0       0       0       0       0
   162 ;;      Totals:         4       0       0       0       0       0       0
   163 ;;Total ram usage:        4 bytes
   164 ;; Hardware stack levels required when called:    4
   165 ;; This function calls:
   166 ;;		_DAC_Init
   167 ;;		_DAC_Start
   168 ;;		_DAC_Write
   169 ;;		_I2C_Init
   170 ;; This function is called by:
   171 ;;		Startup code after reset
   172 ;; This function uses a non-reentrant model
   173 ;;
   174                           
   175                           	psect	text0
   176  000604                     __ptext0:
   177                           	opt callstack 0
   178  000604                     _main:
   179                           	opt callstack 27
   180  000604                     
   181                           ;main.c: 15:     I2C_Init();
   182  000604  EC5F  F003         	call	_I2C_Init	;wreg free
   183                           
   184                           ;main.c: 17:     DAC_Init();
   185  000608  EC8B  F003         	call	_DAC_Init	;wreg free
   186  00060C                     
   187                           ;main.c: 19:     unsigned short i = 0;
   188  00060C  0E00               	movlw	0
   189  00060E  6E08               	movwf	(main@i+1)^0,c
   190  000610  0E00               	movlw	0
   191  000612  6E07               	movwf	main@i^0,c
   192  000614                     
   193                           ;main.c: 20:     signed char j = 4;
   194  000614  0E04               	movlw	4
   195  000616  6E06               	movwf	main@j^0,c
   196  000618                     l915:
   197                           
   198                           ;main.c: 23:         DAC_Start();
   199  000618  EC90  F003         	call	_DAC_Start	;wreg free
   200  00061C                     
   201                           ;main.c: 24:         DAC_Write(i);
   202  00061C  C007  F002         	movff	main@i,DAC_Write@data
   203  000620  C008  F003         	movff	main@i+1,DAC_Write@data+1
   204  000624  EC6E  F003         	call	_DAC_Write	;wreg free
   205  000628                     
   206                           ;main.c: 26:         i = i+j;
   207  000628  5007               	movf	main@i^0,w,c
   208  00062A  2406               	addwf	main@j^0,w,c
   209  00062C  6E07               	movwf	main@i^0,c
   210  00062E  0E00               	movlw	0
   211  000630  BE06               	btfsc	main@j^0,7,c
   212  000632  0EFF               	movlw	255
   213  000634  2008               	addwfc	(main@i+1)^0,w,c
   214  000636  6E08               	movwf	(main@i+1)^0,c
   215  000638                     
   216                           ;main.c: 33:         if(i > 1023){
   217  000638  0E04               	movlw	4
   218  00063A  5C08               	subwf	(main@i+1)^0,w,c
   219  00063C  A0D8               	btfss	status,0,c
   220  00063E  EF23  F003         	goto	u111
   221  000642  EF25  F003         	goto	u110
   222  000646                     u111:
   223  000646  EF2A  F003         	goto	l927
   224  00064A                     u110:
   225  00064A                     
   226                           ;main.c: 34:             j = -4;
   227  00064A  0EFC               	movlw	252
   228  00064C  6E06               	movwf	main@j^0,c
   229                           
   230                           ;main.c: 35:             i = 1023;
   231  00064E  0E03               	movlw	3
   232  000650  6E08               	movwf	(main@i+1)^0,c
   233  000652  6807               	setf	main@i^0,c
   234  000654                     l927:
   235                           
   236                           ;main.c: 39:         __nop();
   237  000654  F000               	nop	
   238  000656                     
   239                           ;main.c: 41:         _delay((unsigned long)((2)*(16000000/4000.0)));
   240  000656  0E0B               	movlw	11
   241  000658  6E05               	movwf	??_main^0,c
   242  00065A  0E62               	movlw	98
   243  00065C                     u127:
   244  00065C  2EE8               	decfsz	wreg,f,c
   245  00065E  D7FE               	bra	u127
   246  000660  2E05               	decfsz	??_main^0,f,c
   247  000662  D7FC               	bra	u127
   248  000664  D000               	nop2	
   249  000666  EF0C  F003         	goto	l915
   250  00066A  EF00  F000         	goto	start
   251  00066E                     __end_of_main:
   252                           	opt callstack 0
   253                           
   254 ;; *************** function _I2C_Init *****************
   255 ;; Defined at:
   256 ;;		line 3 in file "i2c_util.c"
   257 ;; Parameters:    Size  Location     Type
   258 ;;		None
   259 ;; Auto vars:     Size  Location     Type
   260 ;;		None
   261 ;; Return value:  Size  Location     Type
   262 ;;                  1    wreg      void 
   263 ;; Registers used:
   264 ;;		wreg, status,2
   265 ;; Tracked objects:
   266 ;;		On entry : 0/0
   267 ;;		On exit  : 0/0
   268 ;;		Unchanged: 0/0
   269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   270 ;;      Params:         0       0       0       0       0       0       0
   271 ;;      Locals:         0       0       0       0       0       0       0
   272 ;;      Temps:          0       0       0       0       0       0       0
   273 ;;      Totals:         0       0       0       0       0       0       0
   274 ;;Total ram usage:        0 bytes
   275 ;; Hardware stack levels used:    1
   276 ;; This function calls:
   277 ;;		Nothing
   278 ;; This function is called by:
   279 ;;		_main
   280 ;; This function uses a non-reentrant model
   281 ;;
   282                           
   283                           	psect	text1
   284  0006BE                     __ptext1:
   285                           	opt callstack 0
   286  0006BE                     _I2C_Init:
   287                           	opt callstack 30
   288  0006BE                     
   289                           ;i2c_util.c: 4:     ADCON1 = 0x0F;
   290  0006BE  0E0F               	movlw	15
   291  0006C0  6EC1               	movwf	193,c	;volatile
   292  0006C2                     
   293                           ;i2c_util.c: 7:     TRISC3 = 1;
   294  0006C2  8694               	bsf	3988,3,c	;volatile
   295  0006C4                     
   296                           ;i2c_util.c: 8:     TRISC4 = 1;
   297  0006C4  8894               	bsf	3988,4,c	;volatile
   298                           
   299                           ;i2c_util.c: 11:     SSPSTAT = 0x80;
   300  0006C6  0E80               	movlw	128
   301  0006C8  6EC7               	movwf	199,c	;volatile
   302                           
   303                           ;i2c_util.c: 14:     SSPCON1 = 0x28;
   304  0006CA  0E28               	movlw	40
   305  0006CC  6EC6               	movwf	198,c	;volatile
   306                           
   307                           ;i2c_util.c: 15:     SSPCON2 = 0x00;
   308  0006CE  0E00               	movlw	0
   309  0006D0  6EC5               	movwf	197,c	;volatile
   310                           
   311                           ;i2c_util.c: 18:     SSPADD = 39;
   312  0006D2  0E27               	movlw	39
   313  0006D4  6EC8               	movwf	200,c	;volatile
   314  0006D6                     
   315                           ;i2c_util.c: 21:     SSPIE = 1;
   316  0006D6  869D               	bsf	3997,3,c	;volatile
   317  0006D8                     
   318                           ;i2c_util.c: 22:     SSPIF = 0;
   319  0006D8  969E               	bcf	3998,3,c	;volatile
   320  0006DA  0012               	return		;funcret
   321  0006DC                     __end_of_I2C_Init:
   322                           	opt callstack 0
   323                           
   324 ;; *************** function _DAC_Write *****************
   325 ;; Defined at:
   326 ;;		line 16 in file "DAC_util.c"
   327 ;; Parameters:    Size  Location     Type
   328 ;;  data            2    1[COMRAM] unsigned short 
   329 ;; Auto vars:     Size  Location     Type
   330 ;;  result          1    3[COMRAM] unsigned char 
   331 ;; Return value:  Size  Location     Type
   332 ;;                  1    wreg      unsigned char 
   333 ;; Registers used:
   334 ;;		wreg, status,2, status,0, cstack
   335 ;; Tracked objects:
   336 ;;		On entry : 0/0
   337 ;;		On exit  : 0/0
   338 ;;		Unchanged: 0/0
   339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   340 ;;      Params:         2       0       0       0       0       0       0
   341 ;;      Locals:         1       0       0       0       0       0       0
   342 ;;      Temps:          0       0       0       0       0       0       0
   343 ;;      Totals:         3       0       0       0       0       0       0
   344 ;;Total ram usage:        3 bytes
   345 ;; Hardware stack levels used:    1
   346 ;; Hardware stack levels required when called:    2
   347 ;; This function calls:
   348 ;;		_I2C_Write
   349 ;; This function is called by:
   350 ;;		_main
   351 ;; This function uses a non-reentrant model
   352 ;;
   353                           
   354                           	psect	text2
   355  0006DC                     __ptext2:
   356                           	opt callstack 0
   357  0006DC                     _DAC_Write:
   358                           	opt callstack 28
   359  0006DC                     
   360                           ;DAC_util.c: 17:     char result = 0;
   361  0006DC  0E00               	movlw	0
   362  0006DE  6E04               	movwf	DAC_Write@result^0,c
   363  0006E0                     
   364                           ;DAC_util.c: 18:     result = result | I2C_Write((unsigned char)(data>>8));
   365  0006E0  5003               	movf	(DAC_Write@data+1)^0,w,c
   366  0006E2  EC4E  F003         	call	_I2C_Write
   367  0006E6  1004               	iorwf	DAC_Write@result^0,w,c
   368  0006E8  6E04               	movwf	DAC_Write@result^0,c
   369  0006EA                     
   370                           ;DAC_util.c: 19:     result = result |I2C_Write(data);
   371  0006EA  5002               	movf	DAC_Write@data^0,w,c
   372  0006EC  EC4E  F003         	call	_I2C_Write
   373  0006F0  1004               	iorwf	DAC_Write@result^0,w,c
   374  0006F2  6E04               	movwf	DAC_Write@result^0,c
   375  0006F4  0012               	return		;funcret
   376  0006F6                     __end_of_DAC_Write:
   377                           	opt callstack 0
   378                           
   379 ;; *************** function _DAC_Start *****************
   380 ;; Defined at:
   381 ;;		line 11 in file "DAC_util.c"
   382 ;; Parameters:    Size  Location     Type
   383 ;;		None
   384 ;; Auto vars:     Size  Location     Type
   385 ;;		None
   386 ;; Return value:  Size  Location     Type
   387 ;;                  1    wreg      unsigned char 
   388 ;; Registers used:
   389 ;;		wreg, cstack
   390 ;; Tracked objects:
   391 ;;		On entry : 0/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   395 ;;      Params:         0       0       0       0       0       0       0
   396 ;;      Locals:         0       0       0       0       0       0       0
   397 ;;      Temps:          0       0       0       0       0       0       0
   398 ;;      Totals:         0       0       0       0       0       0       0
   399 ;;Total ram usage:        0 bytes
   400 ;; Hardware stack levels used:    1
   401 ;; Hardware stack levels required when called:    2
   402 ;; This function calls:
   403 ;;		_I2C_Write
   404 ;; This function is called by:
   405 ;;		_main
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409                           	psect	text3
   410  000720                     __ptext3:
   411                           	opt callstack 0
   412  000720                     _DAC_Start:
   413                           	opt callstack 28
   414  000720                     
   415                           ;DAC_util.c: 13:     return I2C_Write(0x00);;	Return value of _DAC_Start is never used
   416  000720  0E00               	movlw	0
   417  000722  EC4E  F003         	call	_I2C_Write
   418  000726  0012               	return		;funcret
   419  000728                     __end_of_DAC_Start:
   420                           	opt callstack 0
   421                           
   422 ;; *************** function _DAC_Init *****************
   423 ;; Defined at:
   424 ;;		line 4 in file "DAC_util.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;		None
   427 ;; Auto vars:     Size  Location     Type
   428 ;;		None
   429 ;; Return value:  Size  Location     Type
   430 ;;                  1    wreg      void 
   431 ;; Registers used:
   432 ;;		wreg, status,2, cstack
   433 ;; Tracked objects:
   434 ;;		On entry : 0/0
   435 ;;		On exit  : 0/0
   436 ;;		Unchanged: 0/0
   437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   438 ;;      Params:         0       0       0       0       0       0       0
   439 ;;      Locals:         0       0       0       0       0       0       0
   440 ;;      Temps:          0       0       0       0       0       0       0
   441 ;;      Totals:         0       0       0       0       0       0       0
   442 ;;Total ram usage:        0 bytes
   443 ;; Hardware stack levels used:    1
   444 ;; Hardware stack levels required when called:    3
   445 ;; This function calls:
   446 ;;		_I2C_Start
   447 ;; This function is called by:
   448 ;;		_main
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           
   452                           	psect	text4
   453  000716                     __ptext4:
   454                           	opt callstack 0
   455  000716                     _DAC_Init:
   456                           	opt callstack 27
   457  000716                     
   458                           ;DAC_util.c: 6:     TRISC5 = 0;
   459  000716  9A94               	bcf	3988,5,c	;volatile
   460  000718  0EC4               	movlw	196
   461  00071A  EC37  F003         	call	_I2C_Start
   462  00071E  0012               	return		;funcret
   463  000720                     __end_of_DAC_Init:
   464                           	opt callstack 0
   465                           
   466 ;; *************** function _I2C_Start *****************
   467 ;; Defined at:
   468 ;;		line 25 in file "i2c_util.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;  slave_write_    1    wreg     unsigned char 
   471 ;; Auto vars:     Size  Location     Type
   472 ;;  slave_write_    1    1[COMRAM] unsigned char 
   473 ;; Return value:  Size  Location     Type
   474 ;;                  1    wreg      unsigned char 
   475 ;; Registers used:
   476 ;;		wreg, status,2, cstack
   477 ;; Tracked objects:
   478 ;;		On entry : 0/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   482 ;;      Params:         0       0       0       0       0       0       0
   483 ;;      Locals:         1       0       0       0       0       0       0
   484 ;;      Temps:          0       0       0       0       0       0       0
   485 ;;      Totals:         1       0       0       0       0       0       0
   486 ;;Total ram usage:        1 bytes
   487 ;; Hardware stack levels used:    1
   488 ;; Hardware stack levels required when called:    2
   489 ;; This function calls:
   490 ;;		_I2C_Write
   491 ;; This function is called by:
   492 ;;		_DAC_Init
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496                           	psect	text5
   497  00066E                     __ptext5:
   498                           	opt callstack 0
   499  00066E                     _I2C_Start:
   500                           	opt callstack 27
   501                           
   502                           ;incstack = 0
   503                           ;I2C_Start@slave_write_address stored from wreg
   504  00066E  6E02               	movwf	I2C_Start@slave_write_address^0,c
   505  000670                     
   506                           ;i2c_util.c: 27:     SSPCON2bits.SEN = 1;
   507  000670  80C5               	bsf	197,0,c	;volatile
   508  000672                     l70:
   509  000672  B0C5               	btfsc	197,0,c	;volatile
   510  000674  EF3E  F003         	goto	u31
   511  000678  EF40  F003         	goto	u30
   512  00067C                     u31:
   513  00067C  EF39  F003         	goto	l70
   514  000680                     u30:
   515  000680                     
   516                           ;i2c_util.c: 33:     SSPIF = 0;
   517  000680  969E               	bcf	3998,3,c	;volatile
   518                           
   519                           ;i2c_util.c: 36:     if (!SSPSTATbits.S)
   520  000682  B6C7               	btfsc	199,3,c	;volatile
   521  000684  EF46  F003         	goto	u41
   522  000688  EF48  F003         	goto	u40
   523  00068C                     u41:
   524  00068C  EF4A  F003         	goto	l827
   525  000690                     u40:
   526  000690  EF4D  F003         	goto	l74
   527  000694                     l827:
   528                           
   529                           ;i2c_util.c: 40:     return (I2C_Write(slave_write_address));;	Return value of _I2C_Star
      +                          t is never used
   530  000694  5002               	movf	I2C_Start@slave_write_address^0,w,c
   531  000696  EC4E  F003         	call	_I2C_Write
   532  00069A                     l74:
   533  00069A  0012               	return		;funcret
   534  00069C                     __end_of_I2C_Start:
   535                           	opt callstack 0
   536                           
   537 ;; *************** function _I2C_Write *****************
   538 ;; Defined at:
   539 ;;		line 51 in file "i2c_util.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;  data            1    wreg     unsigned char 
   542 ;; Auto vars:     Size  Location     Type
   543 ;;  data            1    0[COMRAM] unsigned char 
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      unsigned char 
   546 ;; Registers used:
   547 ;;		wreg, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   553 ;;      Params:         0       0       0       0       0       0       0
   554 ;;      Locals:         1       0       0       0       0       0       0
   555 ;;      Temps:          0       0       0       0       0       0       0
   556 ;;      Totals:         1       0       0       0       0       0       0
   557 ;;Total ram usage:        1 bytes
   558 ;; Hardware stack levels used:    1
   559 ;; Hardware stack levels required when called:    1
   560 ;; This function calls:
   561 ;;		_I2C_Ready
   562 ;; This function is called by:
   563 ;;		_I2C_Start
   564 ;;		_DAC_Start
   565 ;;		_DAC_Write
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569                           	psect	text6
   570  00069C                     __ptext6:
   571                           	opt callstack 0
   572  00069C                     _I2C_Write:
   573                           	opt callstack 28
   574                           
   575                           ;incstack = 0
   576                           ;I2C_Write@data stored from wreg
   577  00069C  6E01               	movwf	I2C_Write@data^0,c
   578  00069E                     
   579                           ;i2c_util.c: 53:     SSPBUF = data;
   580  00069E  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
   581  0006A2                     
   582                           ;i2c_util.c: 56:     I2C_Ready();
   583  0006A2  EC7B  F003         	call	_I2C_Ready	;wreg free
   584  0006A6                     
   585                           ;i2c_util.c: 59:     if (ACKSTAT)
   586  0006A6  ACC5               	btfss	4037,6,c	;volatile
   587  0006A8  EF58  F003         	goto	u21
   588  0006AC  EF5A  F003         	goto	u20
   589  0006B0                     u21:
   590  0006B0  EF5D  F003         	goto	l819
   591  0006B4                     u20:
   592  0006B4                     
   593                           ;i2c_util.c: 60:         return 1;
   594  0006B4  0E01               	movlw	1
   595  0006B6  EF5E  F003         	goto	l84
   596  0006BA                     l819:
   597                           
   598                           ;i2c_util.c: 62:         return 2;
   599  0006BA  0E02               	movlw	2
   600  0006BC                     l84:
   601  0006BC  0012               	return		;funcret
   602  0006BE                     __end_of_I2C_Write:
   603                           	opt callstack 0
   604                           
   605 ;; *************** function _I2C_Ready *****************
   606 ;; Defined at:
   607 ;;		line 43 in file "i2c_util.c"
   608 ;; Parameters:    Size  Location     Type
   609 ;;		None
   610 ;; Auto vars:     Size  Location     Type
   611 ;;		None
   612 ;; Return value:  Size  Location     Type
   613 ;;                  1    wreg      void 
   614 ;; Registers used:
   615 ;;		None
   616 ;; Tracked objects:
   617 ;;		On entry : 0/0
   618 ;;		On exit  : 0/0
   619 ;;		Unchanged: 0/0
   620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   621 ;;      Params:         0       0       0       0       0       0       0
   622 ;;      Locals:         0       0       0       0       0       0       0
   623 ;;      Temps:          0       0       0       0       0       0       0
   624 ;;      Totals:         0       0       0       0       0       0       0
   625 ;;Total ram usage:        0 bytes
   626 ;; Hardware stack levels used:    1
   627 ;; This function calls:
   628 ;;		Nothing
   629 ;; This function is called by:
   630 ;;		_I2C_Write
   631 ;;		_I2C_Read
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           	psect	text7
   636  0006F6                     __ptext7:
   637                           	opt callstack 0
   638  0006F6                     _I2C_Ready:
   639                           	opt callstack 28
   640  0006F6                     l77:
   641  0006F6  A69E               	btfss	3998,3,c	;volatile
   642  0006F8  EF80  F003         	goto	u11
   643  0006FC  EF82  F003         	goto	u10
   644  000700                     u11:
   645  000700  EF7B  F003         	goto	l77
   646  000704                     u10:
   647  000704                     
   648                           ;i2c_util.c: 48:     SSPIF = 0;
   649  000704  969E               	bcf	3998,3,c	;volatile
   650  000706  0012               	return		;funcret
   651  000708                     __end_of_I2C_Ready:
   652                           	opt callstack 0
   653                           
   654                           	psect	rparam
   655  0000                     tosu	equ	0xFFF
   656                           tosh	equ	0xFFE
   657                           tosl	equ	0xFFD
   658                           stkptr	equ	0xFFC
   659                           pclatu	equ	0xFFB
   660                           pclath	equ	0xFFA
   661                           pcl	equ	0xFF9
   662                           tblptru	equ	0xFF8
   663                           tblptrh	equ	0xFF7
   664                           tblptrl	equ	0xFF6
   665                           tablat	equ	0xFF5
   666                           prodh	equ	0xFF4
   667                           prodl	equ	0xFF3
   668                           indf0	equ	0xFEF
   669                           postinc0	equ	0xFEE
   670                           postdec0	equ	0xFED
   671                           preinc0	equ	0xFEC
   672                           plusw0	equ	0xFEB
   673                           fsr0h	equ	0xFEA
   674                           fsr0l	equ	0xFE9
   675                           wreg	equ	0xFE8
   676                           indf1	equ	0xFE7
   677                           postinc1	equ	0xFE6
   678                           postdec1	equ	0xFE5
   679                           preinc1	equ	0xFE4
   680                           plusw1	equ	0xFE3
   681                           fsr1h	equ	0xFE2
   682                           fsr1l	equ	0xFE1
   683                           bsr	equ	0xFE0
   684                           indf2	equ	0xFDF
   685                           postinc2	equ	0xFDE
   686                           postdec2	equ	0xFDD
   687                           preinc2	equ	0xFDC
   688                           plusw2	equ	0xFDB
   689                           fsr2h	equ	0xFDA
   690                           fsr2l	equ	0xFD9
   691                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    1
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      8       8
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_DAC_Write
    _DAC_Write->_I2C_Write
    _DAC_Start->_I2C_Write
    _DAC_Init->_I2C_Start
    _I2C_Start->_I2C_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     328
                                              4 COMRAM     4     4      0
                           _DAC_Init
                          _DAC_Start
                          _DAC_Write
                           _I2C_Init
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DAC_Write                                            3     1      2     188
                                              1 COMRAM     3     1      2
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _DAC_Start                                            0     0      0      15
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _DAC_Init                                             0     0      0      30
                          _I2C_Start
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            1     1      0      30
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      15
                                              0 COMRAM     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DAC_Init
     _I2C_Start
       _I2C_Write
         _I2C_Ready
   _DAC_Start
     _I2C_Write
       _I2C_Ready
   _DAC_Write
     _I2C_Write
       _I2C_Ready
   _I2C_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      8       8       1        6.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat May 16 11:47:20 2020

          __size_of_I2C_Ready 0012            __size_of_I2C_Start 002E                   _SSPSTATbits 000FC7  
          __size_of_I2C_Write 0022                            l70 0672                            l80 0706  
                          l72 0680                            l74 069A                            l67 06DA  
                          l84 06BC                            l77 06F6                            l79 0704  
                          u10 0704                            u11 0700                            u20 06B4  
                          u21 06B0                            u30 0680                            u31 067C  
                          u40 0690                            u41 068C                   __CFG_OSC$HS 000000  
          __size_of_DAC_Start 0008            __size_of_DAC_Write 001A                           l123 071E  
                         l126 0726                           l129 06F4                           l811 06A6  
                         l805 06F6                           l813 06B4                           l901 06DC  
                         l807 069E                           l823 0670                           l903 06E0  
                         l831 06BE                           l911 060C                           l809 06A2  
                         l841 0716                           l905 06EA                           l833 06C2  
                         l913 0614                           l819 06BA                           l827 0694  
                         l843 0718                           l835 06C4                           l923 0638  
                         l915 0618                           l845 0720                           l837 06D6  
                         l925 064A                           l917 061C                           l909 0604  
                         l839 06D8                           l927 0654                           l919 0628  
                         l929 0656                           u110 064A                           u111 0646  
                         u127 065C                           _PEN 007E2A                           wreg 000FE8  
                __CFG_WDT$OFF 000000                          _RCEN 007E2B                          _main 0604  
            __end_of_I2C_Init 06DC              __end_of_DAC_Init 0720                          start 0000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000                         ?_main 0001  
                       _ACKEN 007E2C                         _ACKDT 007E2D                         _SSPIE 007CEB  
                       _SSPIF 007CF3             __end_of_I2C_Ready 0708                         main@i 0007  
                       main@j 0006             __end_of_I2C_Start 069C             __end_of_I2C_Write 06BE  
                       status 000FD8             __end_of_DAC_Start 0728             __end_of_DAC_Write 06F6  
             __initialization 0708                  __end_of_main 066E                 DAC_Write@data 0002  
                      ??_main 0005                 __activetblptr 000001                        _ADCON1 000FC1  
                      _SSPADD 000FC8                        _TRISC3 007CA3                        _TRISC4 007CA4  
                      _TRISC5 007CA5                        _SSPBUF 000FC9                     ?_I2C_Init 0001  
                __mediumconst 0000                     ?_DAC_Init 0001                        tblptrh 000FF7  
                      tblptru 000FF8                    __accesstop 0080       __end_of__initialization 0708  
               ___rparam_used 000001                __pcstackCOMRAM 0001                    ??_I2C_Init 0001  
                  ??_DAC_Init 0003                       _ACKSTAT 007E2E                       _SSPCON1 000FC6  
                     _SSPCON2 000FC5                       _SSPSTAT 000FC7             _DAC_SLAVE_ADDRESS 0601  
                   _I2C_Ready 06F6                     _I2C_Start 066E                     _I2C_Write 069C  
                     __Hparam 0000                       __Lparam 0000                     _DAC_Start 0720  
                   _DAC_Write 06DC                  __psmallconst 0600                       __pcinit 0708  
                     __ramtop 0600                       __ptext0 0604                       __ptext1 06BE  
                     __ptext2 06DC                       __ptext3 0720                       __ptext4 0716  
                     __ptext5 066E                       __ptext6 069C                       __ptext7 06F6  
        end_of_initialization 0708     __end_of_DAC_SLAVE_ADDRESS 0602                    ?_I2C_Ready 0001  
                  ?_I2C_Start 0001                    ?_I2C_Write 0001                    ?_DAC_Start 0001  
                  ?_DAC_Write 0002             __size_of_I2C_Init 001E             __size_of_DAC_Init 000A  
         start_initialization 0708                   ??_I2C_Ready 0001                   ??_I2C_Start 0002  
                 ??_I2C_Write 0001               DAC_Write@result 0004                   ??_DAC_Start 0002  
                 ??_DAC_Write 0004                   __smallconst 0600                      _I2C_Init 06BE  
                    _DAC_Init 0716  I2C_Start@slave_write_address 0002                      __Hrparam 0000  
                    __Lrparam 0000                  __Lsmallconst 0600                 I2C_Write@data 0001  
               __size_of_main 006A                   _SSPCON2bits 000FC5  
